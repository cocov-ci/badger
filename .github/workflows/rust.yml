name: "Rust CI"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Run tests
      run: cargo test --verbose

  build:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install development dependencies
        run: sudo apt-get install libssl-dev

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: script/docker-build ${{ matrix.target }} dev

  manifest:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Manifest
        run: |
          docker manifest create \
            cocov/badger:dev \
            --amend cocov/badger:dev-amd64 \
            --amend cocov/badger:dev-arm64v8

      - name: Push Manifest
        run: docker manifest push cocov/badger:dev

  deploy:
   runs-on: ubuntu-latest
   needs: [manifest]
   steps:
    - name: Trigger update
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: ${{ secrets.DEPLOY_PORT }}
        script: cocov/update
